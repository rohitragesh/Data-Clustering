# -*- coding: utf-8 -*-
"""Human Waste Collector Data Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12JipEahO9CuS4se-M2JbqBRUi2_rFADl
"""

!pip3 install scikit-learn-extra
!pip3 install k-means-constrained
!pip3 install numpy

from k_means_constrained import KMeansConstrained

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd 
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
# %matplotlib inline
from sklearn_extra.cluster import KMedoids
from sklearn.cluster import KMeans
from scipy.cluster.hierarchy import centroid, fcluster

import csv


df = pd.read_csv('Waste Collector Data.csv')

df_for_KMedoid = df.drop(['Customer #'],axis=1)

df.info()

sns.scatterplot(x=df['X (mts)'],
                y=df['Y (mts)'])

distortions = []
K = range(1,10)
for k in K:
    kmedoidsModel = KMedoids(n_clusters=k)
    kmedoidsModel.fit(df)
    distortions.append(kmedoidsModel.inertia_)

plt.figure(figsize=(7,4))
plt.plot(K, distortions, 'bx-')
plt.xlabel('k')
plt.ylabel('Distortion')
plt.title('The Elbow Method showing the optimal k')
plt.show()

model = KMedoids(n_clusters=4,metric='manhattan',random_state=21) 
df_kMedoid = model.fit(df_for_KMedoid)

model = KMedoids(n_clusters=4,metric='manhattan',random_state=21) 
df_kMedoid = model.fit(df_for_KMedoid)
pred_labels = df_kMedoid.labels_

model = KMedoids(n_clusters=4,metric='manhattan',random_state=21) 
df_kMedoid = model.fit(df_for_KMedoid)
pred_labels = df_kMedoid.labels_
scatter = plt.scatter(df_for_KMedoid['X (mts)'], df_for_KMedoid['Y (mts)'],c=pred_labels, s=50, cmap='viridis')

centers = model.cluster_centers_
plt.scatter(centers[:, 0], centers[:, 1], c='red', s=100, alpha=0.5);

legend1 = plt.legend(*scatter.legend_elements(),loc="lower left",bbox_to_anchor=(1,0.5), title="Clusters")

centers

pred_labels

df_indi = pd.read_csv("Waste Collector Data.csv")
df_indi["Manhattan Cluster"] = pred_labels
print(df_indi)
df_indi.to_csv('Waste Collector Data.csv')

cluster1 = df_indi.loc[df_indi['Manhattan Cluster'] == 0]
cluster2 = df_indi.loc[df_indi['Manhattan Cluster'] == 1]
cluster3 = df_indi.loc[df_indi['Manhattan Cluster'] == 2]
cluster4 = df_indi.loc[df_indi['Manhattan Cluster'] == 3]

plt.scatter(cluster1['X (mts)'], cluster1['Y (mts)'])
plt.scatter(centers[0][0],centers[0][1])

plt.scatter(cluster2['X (mts)'], cluster2['Y (mts)'])
plt.scatter(centers[1][0],centers[1][1])

plt.scatter(cluster3['X (mts)'], cluster3['Y (mts)'])
plt.scatter(centers[2][0],centers[2][1])

plt.scatter(cluster4['X (mts)'], cluster4['Y (mts)'])
plt.scatter(centers[3][0],centers[3][1])

clf1 = KMeansConstrained(n_clusters=9,size_min=7,size_max=10,random_state=0)
clf1.fit_predict(cluster1)
print(clf1.cluster_centers_)
print(clf1.labels_)

with open('Cluster1.csv','w')as file:

 cluster1.to_csv(file, mode='a', index=False, header=["Customer","X (mts)","Y (mts)","Clusters"])
df_indi1 = pd.read_csv("Cluster1.csv")
df_indi1["Sub-clusters"] = clf1.labels_
print(df_indi1)
df_indi1.to_csv('Cluster1.csv')

df_indi11 = pd.read_csv("Cluster1.csv")
scatter = plt.scatter(df_indi11['X (mts)'], df_indi11['Y (mts)'],c=clf1.labels_, s=50, cmap='viridis')
legend1 = plt.legend(*scatter.legend_elements(),loc="lower left",bbox_to_anchor=(1,0.5), title="Subclusters")
plt.scatter(centers[0][0],centers[0][1], c='red', s=90, alpha=1)

clf2 = KMeansConstrained(n_clusters=9,size_min=7,size_max=10,random_state=0)
clf2.fit_predict(cluster2)
print(clf2.cluster_centers_)
print(clf2.labels_)

with open('Cluster2.csv','w')as file:

 cluster2.to_csv(file, mode='a', index=False, header=["Customer","X (mts)","Y (mts)","Clusters"])
df_indi2 = pd.read_csv("Cluster2.csv")
df_indi2["Sub-clusters"] = clf2.labels_
print(df_indi2)
df_indi2.to_csv('Cluster2.csv')

df_indi12 = pd.read_csv("Cluster2.csv")
scatter = plt.scatter(df_indi12['X (mts)'], df_indi12['Y (mts)'],c= clf2.labels_, s=50, cmap='viridis')
legend1 = plt.legend(*scatter.legend_elements(),loc="lower left",bbox_to_anchor=(1,0.5), title="Subclusters")
plt.scatter(centers[1][0],centers[1][1], c='red', s=90, alpha=1)

clf3 = KMeansConstrained(n_clusters=8,size_min=7,size_max=10,random_state=0)
clf3.fit_predict(cluster3)
print(clf3.cluster_centers_)
print(clf3.labels_)

with open('Cluster3.csv','w')as file:

 cluster3.to_csv(file, mode='a', index=False, header=["Customer","X (mts)","Y (mts)","Clusters"])
df_indi3 = pd.read_csv("Cluster3.csv")
df_indi3["Sub-clusters"] = clf3.labels_
print(df_indi3)
df_indi3.to_csv('Cluster3.csv')

df_indi13 = pd.read_csv("Cluster3.csv")
scatter = plt.scatter(df_indi13['X (mts)'], df_indi13['Y (mts)'],c=clf3.labels_, s=50, cmap='viridis')
legend1 = plt.legend(*scatter.legend_elements(),loc="lower left",bbox_to_anchor=(1,0.5), title="Subclusters")
plt.scatter(centers[2][0],centers[2][1],c='red', s=90, alpha=1)

clf4 = KMeansConstrained(n_clusters=5,size_min=7,size_max=10,random_state=0)
clf4.fit_predict(cluster4)
print(clf4.cluster_centers_)
print(clf4.labels_)

with open('Cluster4.csv','w')as file:

 cluster4.to_csv(file, mode='a', index=False, header=["Customer","X (mts)","Y (mts)","Clusters"])
df_indi4 = pd.read_csv("Cluster4.csv")
df_indi4["Sub-clusters"] = clf4.labels_
print(df_indi4)
df_indi4.to_csv('Cluster4.csv')

df_indi14 = pd.read_csv("Cluster4.csv")
scatter = plt.scatter(df_indi14['X (mts)'], df_indi14['Y (mts)'],c=clf4.labels_, s=50, cmap='viridis')
legend1 = plt.legend(*scatter.legend_elements(),loc="lower left",bbox_to_anchor=(1,0.5), title="Subclusters")
plt.scatter(centers[3][0],centers[3][1], c='red', s=90, alpha=1)

